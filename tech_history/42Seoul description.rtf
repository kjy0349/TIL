{\rtf1\ansi\ansicpg949\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10320\viewh10720\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Focused on memory management, code optimization, and code quality, I've built expertise in efficient software development through peer reviews, handling memory constraints, and using UNIX system calls.\
\
Projects and Skills\
\
Core C Library Implementation (Libft, ft_printf, Get_next_line)\
- Reimplemented C library functions using UNIX system calls, gaining a deep understanding of memory allocation and optimization.\
- Created custom versions of `printf` and a line reader, enhancing low-level I/O skills.\
\
Build Process and Code Quality\
- Wrote Makefiles for consistent GCC compilation across environments.\
- Used Norminette to enforce strict coding standards for maintainable code.\
\
Memory Management and Debugging\
- Added null checks to prevent segmentation faults.\
- Used sanitizers and valgrind to detect and resolve memory leaks.\
\
System Administration (born2beroot)\
- Configured a Debian virtual machine in VirtualBox, managing user permissions, network settings, and firewall rules.\
- Explored hypervisors and container vs. VM architecture.\
\
Algorithm Optimization (push_swap)\
- Implemented an optimized dual-pivot quicksort, minimizing time complexity and function call overhead.\
- Improved pivot selection for balanced sorting performance.\
\
Network Programming (Minitalk)\
- Built a server-client messaging system using sockets, handling asynchronous communication reliably.\
- Implemented Unicode support for extended messaging.\
\
Graphics Programming (so_long, cub3D)\
- Used MiniLibX to create 2D environments and FPS-style 3D navigation with raycasting.\
- Developed interactive mechanics, focusing on rendering efficiency.\
\
Concurrent Programming (Philosopher)\
- Investigated concurrency issues, distinguishing data races and race conditions.\
- Used mutexes and semaphores for thread safety.\
\
Shell Implementation (Minishell)\
- Created a shell emulator supporting command execution, piping, and redirection.\
- Gained experience with process creation, inter-process communication, and signal handling.\
}